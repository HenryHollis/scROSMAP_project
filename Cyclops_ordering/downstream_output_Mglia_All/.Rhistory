braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway.x)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 25))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
check_file = function(file_path){
# Check if the file exists
if (!file.exists(file_path)) {
print(paste("File", file_path, "does not exist."))
}
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
#CONTRL is cycling
fgsea_braak = "fGSEA/fGSEA_result/AD_severity_braak_AR20_minusLogPRanked.csv"
check_file(fgsea_braak)
fgsea_cerad = "fGSEA/fGSEA_result/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
check_file(fgsea_cerad)
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "Test")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway.x)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 25))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
check_file = function(file_path){
# Check if the file exists
if (!file.exists(file_path)) {
print(paste("File", file_path, "does not exist."))
}
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
#CONTRL is cycling
fgsea_braak = "./fGSEA/fGSEA_result/AD_severity_braak_AR20_minusLogPRanked.csv"
check_file(fgsea_braak)
fgsea_cerad = "./fGSEA/fGSEA_result/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
check_file(fgsea_cerad)
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "Test")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway.x)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 25))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
check_file = function(file_path){
# Check if the file exists
if (!file.exists(file_path)) {
print(paste("File", file_path, "does not exist."))
}
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
#CONTRL is cycling
fgsea_braak = "./fGSEA/fGSEA_result/AD_severity_braak_AR20_minusLogPRanked.csv"
check_file(fgsea_braak)
print(getwd())
fgsea_cerad = "./fGSEA/fGSEA_result/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
check_file(fgsea_cerad)
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "Test")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway.x)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 25))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "./fGSEA/fGSEA_result/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "./fGSEA/fGSEA_result/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "Test")
plot_function("downstream_output_Exc3_5", "Test")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway.x)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 25))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "Test")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 25))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "Test")
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 50))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = max.overlaps, point_padding = point_padding, label_padding = label_padding, box_padding = box_padding){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 50))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title, max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5", max.overlaps = 7  )
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5", max.overlaps = 7  )
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5" )
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5" )
library(tidyverse)
library(stringr)
library(RColorBrewer)
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5" )
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 10, point_padding = 0.25, label_padding = 0.25, box_padding = 0.25){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 50))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#000000", max.overlaps = 6, point_padding = 0.25, label_padding = 0.25, box_padding = 0.5){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 50))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5")
helper_func = function(braak_path, cerad_path, title,  marker_color = "#0091ff", max.overlaps = 6, point_padding = 0.25, label_padding = 0.25, box_padding = 0.5){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 50))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5")
plot_function("downstream_output_Inhib_All", "DR by Pathology Comparison, Inhibitory")
plot_function("downstream_output_Inhib_All", "DR by Pathology Comparison, Inhibitory")
plot_function("downstream_output_Ast_All", "DR by Pathology Comparison, Astrocytes")
plot_function("downstream_output_Mglia_All", "DR by Pathology Comparison, Microglia")
library(reticulate) #use to find conda env for python
library(tidyverse)
source("./downstream_helpers/differential_rhyth_generalized.R")
source("./downstream_helpers/create_rnk_files.R")
source("./downstream_helpers/fgsea.R")
source("./downstream_helpers/Files_for_Pscan.R")
source("./downstream_helpers/Make_KEGG_map_files.R")
source("./downstream_helpers/Check_TF_for_cycling_or_DR.R")
source("./downstream_helpers/plot_clock_face_plots.R")
source("./downstream_helpers/plot_gene_traces_generalized.R")
source("./downstream_helpers/order_metabolon.R")
source("./downstream_helpers/order_proteomics.R")
#path to cyclops ordering
path_to_cyclops_ordering = "../Cyclops_ordering/"
#path to normalized counts
path_to_tmm_file = "../normed_counts/ExcSubtypes3and5_FiltByExprDefault_TMM.csv"
# optional path to file containing differential expression results
edgeR_de_filename = "../edgeR_diff_expression/Exc3_5/Exc3_5_filtByExpr_edgeR_DE_QLFTest.csv"
path_to_rosmap_clin = "../ROSMAP_metadata/cleaned_rosmap_meta_cogdxConds.csv"
metabolon_filename = "../metabolic_data/ROSMAP_Metabolon_HD4_Brain514_assay_data.csv"
metabolon_datakey = "../metabolic_data/ROSMAP_Metabolon_HD4_Data_Dictionary.csv"
#BHQ corrected p cutoff to be considered cycling in analysis:
isCyclingBHQCutoff = 0.1
percentile = 0.
useBatch = T
debugSource("~/Box Sync/Henry_stuff/AD_project/scROSMAP/scrosmap_covariate_fork/scROSMAP_project/Analysis_scripts/downstream_helpers/differential_rhyth_generalized.R")
# read in translation dict between gene symbols and other alias
Ensembl_dict = readxl::read_xlsx("downstream_helpers/scROSMAP_ENSEMBL_dict.xlsx")
#Register parallel backend:
# registerDoParallel(cores=8)
#run custom cycling and differential rhythmicity analysis
print("***Running cosinor and differential rhythms analysis***")
run_cycling_and_dr_analysis(path_to_cyclops_ordering, path_to_tmm_file, path_to_rosmap_clin, isCyclingSigCutoff = isCyclingBHQCutoff, percentile = percentile, useBatch = useBatch)
table(preds$ceradsc_bin, preds$batch)
View(gene)
View(gene1)
which(colnames(gene) == "RPS29")
colnames(gene)
which(colnames(gene1) == "RPS29")
gene_i =  4371
gexp1 = as.numeric(unlist(gene1[,gene_i]))
times1 = times
I_local_cog = cog
I_local_cerad = cerad
I_local_braak = braak
s1 = s
p1 = p
if(useBatch){b1 = b}
b1
gexp1 = blunt_outliers(gexp1, percentile = percentile)
gexp1
partial_model = lm(gexp1 ~ sin(times1) + cos(times1) + I_local_cog + b1 + p1 +s1)
full_model = lm(gexp1 ~ I_local_cog*sin(times1) + I_local_cog*cos(times1) + I_local_cog + b1 + p1 + s1)
# design_ma
anova_results = anova(partial_model, full_model)
p_cog = anova_results$`Pr(>F)`[2]
Gene_Symbols = colnames(gene1)[gene_i]
p_cog
partial_model_cerad = lm(gexp1 ~ sin(times1) + cos(times1) + I_local_cerad + b1 + p1 + s1)
full_model_cerad = lm(gexp1 ~ I_local_cerad*sin(times1) + I_local_cerad*cos(times1) + I_local_cerad + b1 + p1 + s1)
anova_results_cerad = anova(partial_model_cerad, full_model_cerad)
p_cerad = anova_results_cerad$`Pr(>F)`[2]
p_cerad
Gene_Symbol
gexp1
partial_model_cerad = lm(gexp1 ~ sin(times1) + cos(times1) + I_local_cerad + b1 + p1 + s1)
full_model_cerad = lm(gexp1 ~ I_local_cerad*sin(times1) + I_local_cerad*cos(times1) + I_local_cerad + b1 + p1 + s1)
anova_results_cerad = anova(partial_model_cerad, full_model_cerad)
p_cerad = anova_results_cerad$`Pr(>F)`[2]
p_cerad
Gene_Symbols
gene_i =  4371
gexp1 = as.numeric(unlist(gene1[,gene_i]))
times1 = times
I_local_cog = cog
I_local_cerad = cerad
I_local_braak = braak
s1 = s
p1 = p
if(useBatch){b1 = b}
gexp1 = blunt_outliers(gexp1, percentile = percentile)
partial_model_cerad = lm(gexp1 ~ sin(times1) + cos(times1) + I_local_cerad + b1 + p1 + s1)
full_model_cerad = lm(gexp1 ~ I_local_cerad*sin(times1) + I_local_cerad*cos(times1) + I_local_cerad + b1 + p1 + s1)
anova_results_cerad = anova(partial_model_cerad, full_model_cerad)
p_cerad = anova_results_cerad$`Pr(>F)`[2]
p_cerad
plot(times1, full_model_cerad$fitted.values)
plot(times1, full_model_cerad$fitted.values)
full_model_cerad$fitted.values
preds
View(preds)
test = cbind(preds, full_model$fitted.values)
View(test)
write.table(test, "~/Desktop/test.csv", sep = ",")
View(full_model_cerad)
design = model.matrix(gexp1 ~ I_local_cerad*sin(times1) + I_local_cerad*cos(times1) + I_local_cerad + p1 + s1)
View(design)
rm_coeffs = grep("sin|cos",names(full_model[["coefficients"]]))
rm_coeffs
rm_coeffs = grep("sin|cos",names(full_model_cerad[["coefficients"]]))
rm_coeffs
test2 = design_mat[,-rm_coeffs] %*% full_model[["coefficients"]][-rm_coeffs]
test2 = design[,-rm_coeffs] %*% full_model[["coefficients"]][-rm_coeffs]
test2 = design[,-rm_coeffs] %*% full_model_cerad[["coefficients"]][-rm_coeffs]
test2
test = cbind(test, test2)
View(test)
write.table(test, "~/Desktop/test.csv", sep = ",")
test2 = full_model_cerad$fitted.values - design[,-rm_coeffs] %*% full_model_cerad[["coefficients"]][-rm_coeffs]
test$test2 = test2
View(test)
write.table(test, "~/Desktop/test.csv", sep = ",")
test2 = full_model_cerad$fitted.values - (design[,-rm_coeffs] %*% full_model_cerad[["coefficients"]][-rm_coeffs])
test = cbind(preds, full_model_cerad$fitted.values, test2)
write.table(test, "~/Desktop/test.csv", sep = ",")
gene_i
p_cerad
rm_coeffs = c(5, 6)
test2 = full_model_cerad$fitted.values - (design[,-rm_coeffs] %*% full_model_cerad[["coefficients"]][-rm_coeffs])
rm_coeffs
full_model_cerad[["call"]]
design = model.matrix((formula = gexp1 ~ I_local_cerad * sin(times1) + I_local_cerad *
cos(times1) + I_local_cerad + b1 + p1 + s1))
View(design)
rm_coeffs = c(5, 6, 7)
test2 = full_model_cerad$fitted.values - (design[,-rm_coeffs] %*% full_model_cerad[["coefficients"]][-rm_coeffs])
test = cbind(preds, full_model_cerad$fitted.values, test2)
write.table(test, "~/Desktop/test.csv", sep = ",")
View(design[,-rm_coeffs])
rm_coeffs = c(1, 2, 5, 6, 7)
test2 = full_model_cerad$fitted.values - (design[,-rm_coeffs] %*% full_model_cerad[["coefficients"]][-rm_coeffs])
test = cbind(preds, full_model_cerad$fitted.values, test2)
write.table(test, "~/Desktop/test.csv", sep = ",")
rm_coeffs = c(3, 4, 8, 9)
test2 = full_model_cerad$fitted.values - (design[,-rm_coeffs] %*% full_model_cerad[["coefficients"]][-rm_coeffs])
test = cbind(preds, full_model_cerad$fitted.values, test2)
write.table(test, "~/Desktop/test.csv", sep = ",")
library(tidyverse)
library(stringr)
library(RColorBrewer)
helper_func = function(braak_path, cerad_path, title,  marker_color = "#0091ff", max.overlaps = 6, point_padding = 0.25, label_padding = 0.25, box_padding = 0.5){
tryCatch({
braak_res = read_csv(braak_path, show_col_types = F)
cerad_res = read_csv(cerad_path, show_col_types = F)
plot_df = merge(braak_res, cerad_res, by ="pathway", suffixes = c("_braak", "_cerad"))
print("making plot")
p = ggplot(plot_df, aes(-log10(padj_braak), -log10(padj_cerad), label = str_to_title(pathway)))+
geom_point(shape = 16, size = 5, alpha = .4, color = marker_color)+
ggrepel::geom_text_repel(max.overlaps = max.overlaps, color = "black", point.padding = point_padding, label.padding = label_padding, box.padding = box_padding )+
xlab("-Log(fGSEA BH.q) Ranked by DR by Braaksc")+
ylab("-Log(fGSEA BH.q) Ranked by DR by Ceradsc")+
ggtitle(str_wrap(title, 50))+
theme_minimal()
print(p)
return(plot_df)
},
error = function(e){message(e)}
)
}
plot_function = function(downstream_str, title){
setwd(paste0("../Cyclops_ordering/",downstream_str ))
fgsea_braak = "fGSEA/fGSEA_results/AD_severity_braak_AR20_minusLogPRanked.csv"
fgsea_cerad = "fGSEA/fGSEA_results/AD_severity_ceradsc_AR20_minusLogPRanked.csv"
helper_func(braak_path = fgsea_braak, cerad_path = fgsea_cerad, title = title)
}
list.files("../Cyclops_ordering/", pattern = "downstream_output*")
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5")
plot_function("downstream_output_Inhib_All", "DR by Pathology Comparison, Inhibitory")
plot_function("downstream_output_Ast_All", "DR by Pathology Comparison, Astrocytes")
plot_function("downstream_output_Mglia_All", "DR by Pathology Comparison, Microglia")
?geom_text_repel
setwd("../../../../Analysis_scripts/")
plot_function("downstream_output_Exc3_5", "DR by Pathology Comparison, Exc 3&5")
plot_function("downstream_output_Inhib_All", "DR by Pathology Comparison, Inhibitory")
setwd("../../Analysis_scripts/")
plot_function("downstream_output_Inhib_All", "DR by Pathology Comparison, Inhibitory")
setwd("../../Analysis_scripts/")
plot_function("downstream_output_Ast_All", "DR by Pathology Comparison, Astrocytes")
setwd("../../Analysis_scripts/")
plot_function("downstream_output_Mglia_All", "DR by Pathology Comparison, Microglia")
